<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>William</title>
    <link>https://williamlfang.github.io/</link>
    <description>William</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 13 Jun 2024 19:27:04 &#43;0800</lastBuildDate>
      <atom:link href="https://williamlfang.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
  <title>nvim 自动备份 lazy lock.json</title>
  <link>https://williamlfang.github.io/2024-06-13-nvim-%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD-lazy-lock.json/</link>
  <pubDate>Thu, 13 Jun 2024 19:27:04 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2024-06-13-nvim-%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD-lazy-lock.json/</guid>
  <description><![CDATA[<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="c1">-- backup: lazy-lazy.json</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">lazy_cmds</span> <span class="o">=</span> <span class="n">vim.api</span><span class="p">.</span><span class="n">nvim_create_augroup</span><span class="p">(</span><span class="s1">&#39;lazy_cmds&#39;</span><span class="p">,</span> <span class="p">{</span><span class="n">clear</span> <span class="o">=</span> <span class="kc">true</span><span class="p">})</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">root</span> <span class="o">=</span> <span class="n">os.getenv</span><span class="p">(</span><span class="s2">&#34;HOME&#34;</span><span class="p">)</span> <span class="o">..</span> <span class="s2">&#34;/.config/nvim/lazy&#34;</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">snapshot_dir</span> <span class="o">=</span> <span class="n">root</span> <span class="o">..</span> <span class="s1">&#39;/plugin-snapshot&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">os.execute</span><span class="p">(</span><span class="s2">&#34;mkdir &#34;</span> <span class="o">..</span> <span class="n">snapshot_dir</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">lockfile</span> <span class="o">=</span> <span class="n">root</span> <span class="o">..</span> <span class="s1">&#39;/lazy-lock.json&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">vim.api</span><span class="p">.</span><span class="n">nvim_create_user_command</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;BrowseSnapshots&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;edit &#39;</span> <span class="o">..</span> <span class="n">snapshot_dir</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">{}</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">vim.api</span><span class="p">.</span><span class="n">nvim_create_autocmd</span><span class="p">(</span><span class="s1">&#39;User&#39;</span><span class="p">,</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">group</span> <span class="o">=</span> <span class="n">lazy_cmds</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">pattern</span> <span class="o">=</span> <span class="s1">&#39;LazyUpdatePre&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">desc</span> <span class="o">=</span> <span class="s1">&#39;Backup lazy.nvim lockfile&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">callback</span> <span class="o">=</span> <span class="kr">function</span><span class="p">(</span><span class="n">event</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">vim.fn</span><span class="p">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">snapshot_dir</span><span class="p">,</span> <span class="s1">&#39;p&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="kd">local</span> <span class="n">snapshot</span> <span class="o">=</span> <span class="n">snapshot_dir</span> <span class="o">..</span> <span class="n">os.date</span><span class="p">(</span><span class="s1">&#39;/%Y-%m-%dT%H:%M:%S.lazy-lock.json&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">vim.loop</span><span class="p">.</span><span class="n">fs_copyfile</span><span class="p">(</span><span class="n">lockfile</span><span class="p">,</span> <span class="n">snapshot</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">})</span></span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li><code>:Lazy restore</code></li>
</ul>]]></description>
</item>
<item>
  <title>zsh 只显示当前路径</title>
  <link>https://williamlfang.github.io/2024-06-12-zsh-%E5%8F%AA%E6%98%BE%E7%A4%BA%E5%BD%93%E5%89%8D%E8%B7%AF%E5%BE%84/</link>
  <pubDate>Wed, 12 Jun 2024 21:23:46 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2024-06-12-zsh-%E5%8F%AA%E6%98%BE%E7%A4%BA%E5%BD%93%E5%89%8D%E8%B7%AF%E5%BE%84/</guid>
  <description><![CDATA[<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">prompt_dir<span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">##prompt_segment blue $CURRENT_FG &#39;%~&#39;</span>
</span></span><span class="line"><span class="cl">    prompt_segment blue <span class="nv">$CURRENT_FG</span> <span class="s1">&#39;%c&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">prompt_context<span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># if [[ &#34;$USER&#34; != &#34;$DEFAULT_USER&#34; || -n &#34;$SSH_CLIENT&#34; ]]; then</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># prompt_segment black default &#34;%(!.%{%F{yellow}%}.)$USER@%sh&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># prompt_segment black default &#34;%{$fg[blue]%}ops%{$fg[red]%}CMA%{$fg[yellow]%}@Colo104&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># prompt_segment black default &#34;%(!.%{%F{yellow}%}.)%{$fg[red]%}$USER#VKY%{$reset_color%}%{$fg[yellow]%}@Colo113&#34;</span>
</span></span><span class="line"><span class="cl">    prompt_segment black default <span class="s2">&#34;dell&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># fi</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>cmake 设置默认编译器CMAKE_CXX_COMPILER造成死循环的问题</title>
  <link>https://williamlfang.github.io/2024-06-11-cmake-%E8%AE%BE%E7%BD%AE%E9%BB%98%E8%AE%A4%E7%BC%96%E8%AF%91%E5%99%A8cmake_cxx_compiler%E9%80%A0%E6%88%90%E6%AD%BB%E5%BE%AA%E7%8E%AF%E7%9A%84%E9%97%AE%E9%A2%98/</link>
  <pubDate>Tue, 11 Jun 2024 18:53:00 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2024-06-11-cmake-%E8%AE%BE%E7%BD%AE%E9%BB%98%E8%AE%A4%E7%BC%96%E8%AF%91%E5%99%A8cmake_cxx_compiler%E9%80%A0%E6%88%90%E6%AD%BB%E5%BE%AA%E7%8E%AF%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/2024-06-11-cmake-%E8%AE%BE%E7%BD%AE%E9%BB%98%E8%AE%A4%E7%BC%96%E8%AF%91%E5%99%A8cmake_cxx_compiler%E9%80%A0%E6%88%90%E6%AD%BB%E5%BE%AA%E7%8E%AF%E7%9A%84%E9%97%AE%E9%A2%98/cmake.png" alt="cmake 设置默认编译器CMAKE_CXX_COMPILER造成死循环的问题" title="cmake 设置默认编译器CMAKE_CXX_COMPILER造成死循环的问题" referrerpolicy="no-referrer"/></div><p>为了以指定版本的编译器进行编译，我们可以通过修改 <code>cmake</code> 默认编译器 (CMAKE_CXX_COMPILER)。然而，如果在多项目的 <code>add_subdirectory</code> 包含其他项目，可能造成死循环的问题。</p>]]></description>
</item>
<item>
  <title>glibc2.18 安装</title>
  <link>https://williamlfang.github.io/2024-06-11-glibc2.18-%E5%AE%89%E8%A3%85/</link>
  <pubDate>Tue, 11 Jun 2024 16:16:21 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2024-06-11-glibc2.18-%E5%AE%89%E8%A3%85/</guid>
  <description><![CDATA[<p>先查看当前系统的 <code>glibc</code> 版本</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">locate libc.so                                                                                                                                                                               <span class="o">[</span>16:20:29<span class="o">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/usr/lib64/libc.so
</span></span><span class="line"><span class="cl">/usr/lib64/libc.so.6
</span></span><span class="line"><span class="cl">/usr/local/glibc-2.34/lib/libc.so
</span></span><span class="line"><span class="cl">/usr/local/glibc-2.34/lib/libc.so.6</span></span></code></pre></td></tr></table>
</div>
</div><p>当前系统使用的 <code>glibc</code> 动态库在 <code>/usr/lib64/libc.so.6</code>。我们可以使用命令 <code>strings</code> 查看动态库的版本信息</p>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">strings /usr/lib64/libc.so.6 <span class="p">|</span>egrep <span class="s1">&#39;^GLIBC_2.&#39;</span> <span class="p">|</span>sort                                                                                                                                        <span class="o">[</span>16:19:55<span class="o">]</span>
</span></span><span class="line"><span class="cl">GLIBC_2.10
</span></span><span class="line"><span class="cl">GLIBC_2.10
</span></span><span class="line"><span class="cl">GLIBC_2.11
</span></span><span class="line"><span class="cl">GLIBC_2.11
</span></span><span class="line"><span class="cl">GLIBC_2.12
</span></span><span class="line"><span class="cl">GLIBC_2.13
</span></span><span class="line"><span class="cl">GLIBC_2.13
</span></span><span class="line"><span class="cl">GLIBC_2.14
</span></span><span class="line"><span class="cl">GLIBC_2.15
</span></span><span class="line"><span class="cl">GLIBC_2.16
</span></span><span class="line"><span class="cl">GLIBC_2.16
</span></span><span class="line"><span class="cl">GLIBC_2.17
</span></span><span class="line"><span class="cl">GLIBC_2.17
</span></span><span class="line"><span class="cl">GLIBC_2.18
</span></span><span class="line"><span class="cl">GLIBC_2.18
</span></span><span class="line"><span class="cl">GLIBC_2.2.5
</span></span><span class="line"><span class="cl">GLIBC_2.2.6
</span></span><span class="line"><span class="cl">GLIBC_2.2.6
</span></span><span class="line"><span class="cl">GLIBC_2.3
</span></span><span class="line"><span class="cl">GLIBC_2.3.2
</span></span><span class="line"><span class="cl">GLIBC_2.3.3
</span></span><span class="line"><span class="cl">GLIBC_2.3.4
</span></span><span class="line"><span class="cl">GLIBC_2.4
</span></span><span class="line"><span class="cl">GLIBC_2.5
</span></span><span class="line"><span class="cl">GLIBC_2.5
</span></span><span class="line"><span class="cl">GLIBC_2.6
</span></span><span class="line"><span class="cl">GLIBC_2.6
</span></span><span class="line"><span class="cl">GLIBC_2.7
</span></span><span class="line"><span class="cl">GLIBC_2.7
</span></span><span class="line"><span class="cl">GLIBC_2.8
</span></span><span class="line"><span class="cl">GLIBC_2.8
</span></span><span class="line"><span class="cl">GLIBC_2.9
</span></span><span class="line"><span class="cl">GLIBC_2.9</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>g&#43;&#43; 获取编译时间</title>
  <link>https://williamlfang.github.io/2024-06-10-g-%E8%8E%B7%E5%8F%96%E7%BC%96%E8%AF%91%E6%97%B6%E9%97%B4/</link>
  <pubDate>Mon, 10 Jun 2024 16:57:49 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2024-06-10-g-%E8%8E%B7%E5%8F%96%E7%BC%96%E8%AF%91%E6%97%B6%E9%97%B4/</guid>
  <description><![CDATA[<p><code>gcc/g++</code> 提供编译日期，可以通过获取日期，进行相关判断。</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c++" data-lang="c++"><span class="line"><span class="cl"><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">months</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#34;Jan&#34;</span><span class="p">,</span> <span class="s">&#34;Feb&#34;</span><span class="p">,</span> <span class="s">&#34;Mar&#34;</span><span class="p">,</span> <span class="s">&#34;Apr&#34;</span><span class="p">,</span> <span class="s">&#34;May&#34;</span><span class="p">,</span> <span class="s">&#34;Jun&#34;</span><span class="p">,</span> <span class="s">&#34;Jul&#34;</span><span class="p">,</span> <span class="s">&#34;Aug&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                        <span class="s">&#34;Sep&#34;</span><span class="p">,</span> <span class="s">&#34;Oct&#34;</span><span class="p">,</span> <span class="s">&#34;Nov&#34;</span><span class="p">,</span> <span class="s">&#34;Dec&#34;</span><span class="p">};</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>c&#43;&#43; inline浅析</title>
  <link>https://williamlfang.github.io/2024-06-10-c-inline%E6%B5%85%E6%9E%90/</link>
  <pubDate>Mon, 10 Jun 2024 11:17:39 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2024-06-10-c-inline%E6%B5%85%E6%9E%90/</guid>
  <description><![CDATA[<p><code>gcc</code> 提供关键词 <code>inline</code>，允许我们标注函数需要在编译时展开，这样可以避免函数调用，减低函数栈开销，从而达到优化程序的目地。然而，天下并没有免费的午餐，在引入 <code>inline</code> 的同时，我们也需要注意其带来的程序体积变大、<code>cache locality</code> 减少的风险。</p>
<blockquote>
<p>Pros of inlining:</p>
<ul>
<li>Removes function call overhead (yay!)</li>
<li>May reveal additional optimization opportunities (sometimes yay!)</li>
</ul>
<p>Cons of inlining:</p>
<ul>
<li>Increases program size (boo!)</li>
<li>May reduce cache locality (sometimes boo!)</li>
<li>May increase build times (boo!)</li>
</ul>
</blockquote>]]></description>
</item>
<item>
  <title>nvim tokyonight 修改高亮颜色</title>
  <link>https://williamlfang.github.io/2024-06-06-nvim-tokyonight-%E4%BF%AE%E6%94%B9%E9%AB%98%E4%BA%AE%E9%A2%9C%E8%89%B2/</link>
  <pubDate>Thu, 06 Jun 2024 22:49:17 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2024-06-06-nvim-tokyonight-%E4%BF%AE%E6%94%B9%E9%AB%98%E4%BA%AE%E9%A2%9C%E8%89%B2/</guid>
  <description><![CDATA[如果遇到在终端显示问题，可以修改高亮颜色: ~/.config/nvim/lua/plugins/tokyonight.lua 1 2 3 4 5 6 7 8 on_highlights = function(hl, colors) hl.LineNr = { fg = &#34;#fffb7b&#34;, } hl.CursorLineNr = { fg = &#34;#709db2&#34;, } end,]]></description>
</item>
<item>
  <title>docker registry 忘记账户密码</title>
  <link>https://williamlfang.github.io/2024-05-25-docker-registry-%E5%BF%98%E8%AE%B0%E8%B4%A6%E6%88%B7%E5%AF%86%E7%A0%81/</link>
  <pubDate>Sat, 25 May 2024 16:37:57 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2024-05-25-docker-registry-%E5%BF%98%E8%AE%B0%E8%B4%A6%E6%88%B7%E5%AF%86%E7%A0%81/</guid>
  <description><![CDATA[<p>如果忘记 <code>docker-registry</code> 账户密码，可以通过复原加密密码查看。</p>]]></description>
</item>
<item>
  <title>c&#43;&#43; 使用 nanobench 测试性能</title>
  <link>https://williamlfang.github.io/2024-05-22-c-%E4%BD%BF%E7%94%A8-nanobench-%E6%B5%8B%E8%AF%95%E6%80%A7%E8%83%BD/</link>
  <pubDate>Wed, 22 May 2024 18:06:07 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2024-05-22-c-%E4%BD%BF%E7%94%A8-nanobench-%E6%B5%8B%E8%AF%95%E6%80%A7%E8%83%BD/</guid>
  <description><![CDATA[<p><code>nanobench</code> 是一个简易的代码性能测试工具，有助手我们深入理解程序运行的开销。</p>]]></description>
</item>
<item>
  <title>nvim 报错: lua language server</title>
  <link>https://williamlfang.github.io/2024-05-17-nvim-%E6%8A%A5%E9%94%99--lua-language-server/</link>
  <pubDate>Fri, 17 May 2024 16:00:31 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2024-05-17-nvim-%E6%8A%A5%E9%94%99--lua-language-server/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/2024-05-17-nvim-%E6%8A%A5%E9%94%99--lua-language-server/lua-error.png" alt="nvim 报错: lua language server" title="nvim 报错: lua language server" referrerpolicy="no-referrer"/></div><p>今天升级 <code>lazy.nvim</code> 遇到一个错误：</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Spawning language server with cmd: `lua-language-server` failed. The language server is either not installed, missing from PATH, or not executable.</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
</channel>
</rss>
