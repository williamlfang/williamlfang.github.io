<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>William</title>
    <link>https://williamlfang.github.io/</link>
    <description>William</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 22 Feb 2025 12:49:59 &#43;0800</lastBuildDate>
      <atom:link href="https://williamlfang.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
  <title>在 c 代码文件插入 shell 命令</title>
  <link>https://williamlfang.github.io/2025-02-22-%E5%9C%A8-c-%E4%BB%A3%E7%A0%81%E6%96%87%E4%BB%B6%E6%8F%92%E5%85%A5-shell-%E5%91%BD%E4%BB%A4/</link>
  <pubDate>Sat, 22 Feb 2025 12:49:59 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-02-22-%E5%9C%A8-c-%E4%BB%A3%E7%A0%81%E6%96%87%E4%BB%B6%E6%8F%92%E5%85%A5-shell-%E5%91%BD%E4%BB%A4/</guid>
  <description><![CDATA[<p>今天看到一个帖子：<a href="https://www.reddit.com/r/C_Programming/comments/1iuvu0f/just_realized_you_can_put_shell_script_inside_c/"target="_blank" rel="external nofollow noopener noreferrer">Just realized you can put shell script inside c source files<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>，想到以前有个朋友也是这么使用 <code>c</code>，觉得挺神奇的。</p>
<p>这个是在 <code>c</code> 源代码文件，使用 <code>macro</code> 宏定义一组 <code>shell</code> 命令，然后再退出 <code>shell</code>，这样就不会在继续执行真正的 <code>c</code> 代码了。这样做的好处是可以使用一个命令 <code>sh main.c</code> 即可快速运行可执行文件，对于一些简单部署的任务比较方便。</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#if 0</span><span class="c">
</span></span></span><span class="line"><span class="cl"><span class="c">cc -o /tmp/app main.c
</span></span></span><span class="line"><span class="cl"><span class="c">/tmp/app
</span></span></span><span class="line"><span class="cl"><span class="c">exit # required, otherwise sh will try to interpret the C code below
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="cp">#endif
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;quick script</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sh main.c
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">quick script</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>tmux: error while loading shared libraries: libevent_core 2.1.so.6</title>
  <link>https://williamlfang.github.io/2025-02-20-tmux--error-while-loading-shared-libraries--libevent_core-2.1.so.6/</link>
  <pubDate>Thu, 20 Feb 2025 18:19:39 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-02-20-tmux--error-while-loading-shared-libraries--libevent_core-2.1.so.6/</guid>
  <description><![CDATA[<p><code>tmux</code> 报错</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">tmux: error <span class="k">while</span> loading shared libraries: libevent_core-2.1.so.7</span></span></code></pre></td></tr></table>
</div>
</div><p>使用 <code>ldd</code> 查看是可以找到动态库</p>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ldd ~/local/bin/tmux
</span></span><span class="line"><span class="cl">        linux-vdso.so.1 <span class="o">(</span>0x00007ffe043f8000<span class="o">)</span>
</span></span><span class="line"><span class="cl">        libutil.so.1 <span class="o">=</span>&gt; /lib64/libutil.so.1 <span class="o">(</span>0x00007fa85ce0c000<span class="o">)</span>
</span></span><span class="line"><span class="cl">        libtinfo.so.5 <span class="o">=</span>&gt; /lib64/libtinfo.so.5 <span class="o">(</span>0x00007fa85cbe2000<span class="o">)</span>
</span></span><span class="line"><span class="cl">        libevent_core-2.1.so.6 <span class="o">=</span>&gt; /home/lfang/local/lib/libevent_core-2.1.so.6 <span class="o">(</span>0x00007fa85c9ac000<span class="o">)</span>
</span></span><span class="line"><span class="cl">        libm.so.6 <span class="o">=</span>&gt; /lib64/libm.so.6 <span class="o">(</span>0x00007fa85c6aa000<span class="o">)</span>
</span></span><span class="line"><span class="cl">        libresolv.so.2 <span class="o">=</span>&gt; /lib64/libresolv.so.2 <span class="o">(</span>0x00007fa85c493000<span class="o">)</span>
</span></span><span class="line"><span class="cl">        libc.so.6 <span class="o">=</span>&gt; /lib64/libc.so.6 <span class="o">(</span>0x00007fa85c0e7000<span class="o">)</span>
</span></span><span class="line"><span class="cl">        libcrypto.so.10 <span class="o">=</span>&gt; /lib64/libcrypto.so.10 <span class="o">(</span>0x00007fa85bc84000<span class="o">)</span>
</span></span><span class="line"><span class="cl">        libpthread.so.0 <span class="o">=</span>&gt; /lib64/libpthread.so.0 <span class="o">(</span>0x00007fa85ba66000<span class="o">)</span>
</span></span><span class="line"><span class="cl">        /lib64/ld-linux-x86-64.so.2 <span class="o">(</span>0x00007fa85d00f000<span class="o">)</span>
</span></span><span class="line"><span class="cl">        libdl.so.2 <span class="o">=</span>&gt; /lib64/libdl.so.2 <span class="o">(</span>0x00007fa85b862000<span class="o">)</span>
</span></span><span class="line"><span class="cl">        libz.so.1 <span class="o">=</span>&gt; /home/lfang/opt/lib/libz.so.1 <span class="o">(</span>0x00007fa85d20c000<span class="o">)</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>nvim orgmode 修改 archive 文件名称</title>
  <link>https://williamlfang.github.io/2025-02-11-nvim-orgmode-%E4%BF%AE%E6%94%B9-archive-%E6%96%87%E4%BB%B6%E5%90%8D%E7%A7%B0/</link>
  <pubDate>Tue, 11 Feb 2025 19:50:58 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-02-11-nvim-orgmode-%E4%BF%AE%E6%94%B9-archive-%E6%96%87%E4%BB%B6%E5%90%8D%E7%A7%B0/</guid>
  <description><![CDATA[<p>修改 <code>orgmode</code> 保存 <code>archive</code> 时的文件重命名。</p>]]></description>
</item>
<item>
  <title>nvim 添加自定义代码段 snippets</title>
  <link>https://williamlfang.github.io/2025-02-09-nvim-%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E6%AE%B5-snippets/</link>
  <pubDate>Sun, 09 Feb 2025 11:18:23 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-02-09-nvim-%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E6%AE%B5-snippets/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/2025-02-09-nvim-%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E6%AE%B5-snippets/sched.png" alt="nvim 添加自定义代码段 snippets" title="nvim 添加自定义代码段 snippets" referrerpolicy="no-referrer"/></div><p>我们在写代码时，会经常使用一些普遍的写法，比如一个 <code>for</code> 循环；或者是一些常用的代码段，比如 <code>datetime</code> 直接输入当前的日期。</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c++" data-lang="c++"><span class="line"><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="p">...</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>nvim buffer 文本补全</title>
  <link>https://williamlfang.github.io/2025-02-08-nvim-buffer-%E6%96%87%E6%9C%AC%E8%A1%A5%E5%85%A8/</link>
  <pubDate>Sat, 08 Feb 2025 13:49:31 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-02-08-nvim-buffer-%E6%96%87%E6%9C%AC%E8%A1%A5%E5%85%A8/</guid>
  <description><![CDATA[<p>有时我们在编辑一些文本文件时，会同时打开多个 <code>buffer</code>，并且希望可能在多个 <code>buffe</code> 之间，根据文本进行自动补全。默认的补全规则是基于当前的 <code>buffer</code>，这个需要进行相应的修改才能实现我们的需求。</p>]]></description>
</item>
<item>
  <title>nvim 使用 yarepl 进行交互式执行命令</title>
  <link>https://williamlfang.github.io/2025-01-19-nvim-%E4%BD%BF%E7%94%A8-yarepl-%E8%BF%9B%E8%A1%8C%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/</link>
  <pubDate>Sun, 19 Jan 2025 18:46:04 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-01-19-nvim-%E4%BD%BF%E7%94%A8-yarepl-%E8%BF%9B%E8%A1%8C%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/2025-01-19-nvim-%E4%BD%BF%E7%94%A8-yarepl-%E8%BF%9B%E8%A1%8C%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/ipython.png" alt="nvim 使用 yarepl 进行交互式执行命令" title="nvim 使用 yarepl 进行交互式执行命令" referrerpolicy="no-referrer"/></div><p>我有时候需要使用一些脚本语言进行工作，比如使用 <code>bash</code> 编写简单的任务、使用 <code>python</code> 进行数据分析。这些脚本语言的一个好处是可以快速的验证想法，比较灵活操作一些简单的任务。同时，脚本语言还提供了 <code>REPL</code> 的交互式操作，即可以一边写代码、一边执行代码。比如，对于 <code>python</code> 脚本，我可能写了一个函数，然后想快速验证函数里面的某写代码块是否符合逻辑，这时候我们可以利用 <code>REPL</code> 的功能把相关的代码快输入到解释器，即可得到验证。</p>
<p>在 <code>nvim</code> 中编写 <code>python</code> 代码，如何配置实现 <code>REPL</code> 功能呢？</p>
<p>这可以通过插件 <code>yarepl.nvim</code> 完成。</p>]]></description>
</item>
<item>
  <title>nvim disable pyright</title>
  <link>https://williamlfang.github.io/2025-01-19-nvim-disable-pyright/</link>
  <pubDate>Sun, 19 Jan 2025 18:34:03 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-01-19-nvim-disable-pyright/</guid>
  <description><![CDATA[<p>While using <code>ruff-lsp</code> for Python diagnostics, I find it redundant to have <code>pyright</code> still active for all Python scripts. So I decide to <strong>disable</strong> it.</p>
<p>This is how I managed to solve it.</p>]]></description>
</item>
<item>
  <title>nvim treesitter 与 csv.nvim 冲突</title>
  <link>https://williamlfang.github.io/2025-01-17-nvim-treesitter-%E4%B8%8E-csv.nvim-%E5%86%B2%E7%AA%81/</link>
  <pubDate>Fri, 17 Jan 2025 22:23:35 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-01-17-nvim-treesitter-%E4%B8%8E-csv.nvim-%E5%86%B2%E7%AA%81/</guid>
  <description><![CDATA[<p>需要把 <code>nvim-treesitter</code> 的 <code>csv</code> 语法关闭</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="c1">-- List of parsers to ignore installing (or &#34;all&#34;)</span>
</span></span><span class="line"><span class="cl"><span class="n">ignore_install</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;javascript&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;markdown&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;org&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;csv&#34;</span><span class="p">,</span> <span class="c1">-- we do not use tree-sitter csv since csv.lua would be broken</span>
</span></span><span class="line"><span class="cl"><span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="n">highlight</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">enable</span> <span class="o">=</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- disable = {&#34;csv&#34;, &#34;markdown&#34;}</span>
</span></span><span class="line"><span class="cl">    <span class="n">disable</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&#34;csv&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">},</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>Airflow Plugins</title>
  <link>https://williamlfang.github.io/2025-01-14-airflow-plugins/</link>
  <pubDate>Tue, 14 Jan 2025 17:21:36 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-01-14-airflow-plugins/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/2025-01-14-airflow-plugins/mycron.png" alt="Airflow Plugins" title="Airflow Plugins" referrerpolicy="no-referrer"/></div><p><code>ariflow</code> 的 <code>schedule</code> 可以使用 <code>timetable</code> 或者 <code>cron expression</code> 配置任务调度的时间。对于使用 <code>cron expression</code>，如果我们需要更加细粒度的控制，则比较困难。比如我有一个任务设定在两个时间执行</p>
<ul>
<li><code>45 08 * * 1-5</code></li>
<li><code>01 09 * * 1-5</code></li>
</ul>
<p>这个在 <code>cron expression</code> 无法合并成同一个任务。</p>]]></description>
</item>
<item>
  <title>nvim tmux 颜色显示不对</title>
  <link>https://williamlfang.github.io/2025-01-13-nvim-tmux-%E9%A2%9C%E8%89%B2%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%AF%B9/</link>
  <pubDate>Mon, 13 Jan 2025 21:28:04 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-01-13-nvim-tmux-%E9%A2%9C%E8%89%B2%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%AF%B9/</guid>
  <description><![CDATA[<p>在 <code>~/.tmux.conf</code> 添加</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">set</span> -ga terminal-overrides <span class="s2">&#34;,xterm-256color:Tc&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">set</span> -g default-terminal <span class="s2">&#34;tmux-256color&#34;</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
</channel>
</rss>
