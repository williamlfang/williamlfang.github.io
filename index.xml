<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>William</title>
    <link>https://williamlfang.github.io/</link>
    <description>William</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 09 Feb 2025 11:18:23 &#43;0800</lastBuildDate>
      <atom:link href="https://williamlfang.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
  <title>nvim 添加自定义代码段 snippets</title>
  <link>https://williamlfang.github.io/2025-02-09-nvim-%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E6%AE%B5-snippets/</link>
  <pubDate>Sun, 09 Feb 2025 11:18:23 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-02-09-nvim-%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E6%AE%B5-snippets/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/2025-02-09-nvim-%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E6%AE%B5-snippets/sched.png" alt="nvim 添加自定义代码段 snippets" title="nvim 添加自定义代码段 snippets" referrerpolicy="no-referrer"/></div><p>我们在写代码时，会经常遇到一些普遍的写法，比如一个 <code>for</code> 循环；或者是一些常用的代码段，比如 <code>datetime</code> 直接输入当前的日期。</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c++" data-lang="c++"><span class="line"><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="p">...</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>nvim buffer 文本补全</title>
  <link>https://williamlfang.github.io/2025-02-08-nvim-buffer-%E6%96%87%E6%9C%AC%E8%A1%A5%E5%85%A8/</link>
  <pubDate>Sat, 08 Feb 2025 13:49:31 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-02-08-nvim-buffer-%E6%96%87%E6%9C%AC%E8%A1%A5%E5%85%A8/</guid>
  <description><![CDATA[<p>有时我们在编辑一些文本文件时，会同时打开多个 <code>buffer</code>，并且希望可能在多个 <code>buffe</code> 之间，根据文本进行自动补全。默认的补全规则是基于当前的 <code>buffer</code>，这个需要进行相应的修改才能实现我们的需求。</p>]]></description>
</item>
<item>
  <title>nvim 使用 yarepl 进行交互式执行命令</title>
  <link>https://williamlfang.github.io/2025-01-19-nvim-%E4%BD%BF%E7%94%A8-yarepl-%E8%BF%9B%E8%A1%8C%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/</link>
  <pubDate>Sun, 19 Jan 2025 18:46:04 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-01-19-nvim-%E4%BD%BF%E7%94%A8-yarepl-%E8%BF%9B%E8%A1%8C%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/2025-01-19-nvim-%E4%BD%BF%E7%94%A8-yarepl-%E8%BF%9B%E8%A1%8C%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/ipython.png" alt="nvim 使用 yarepl 进行交互式执行命令" title="nvim 使用 yarepl 进行交互式执行命令" referrerpolicy="no-referrer"/></div><p>我有时候需要使用一些脚本语言进行工作，比如使用 <code>bash</code> 编写简单的任务、使用 <code>python</code> 进行数据分析。这些脚本语言的一个好处是可以快速的验证想法，比较灵活操作一些简单的任务。同时，脚本语言还提供了 <code>REPL</code> 的交互式操作，即可以一边写代码、一边执行代码。比如，对于 <code>python</code> 脚本，我可能写了一个函数，然后想快速验证函数里面的某写代码块是否符合逻辑，这时候我们可以利用 <code>REPL</code> 的功能把相关的代码快输入到解释器，即可得到验证。</p>
<p>在 <code>nvim</code> 中编写 <code>python</code> 代码，如何配置实现 <code>REPL</code> 功能呢？</p>
<p>这可以通过插件 <code>yarepl.nvim</code> 完成。</p>]]></description>
</item>
<item>
  <title>nvim disable pyright</title>
  <link>https://williamlfang.github.io/2025-01-19-nvim-disable-pyright/</link>
  <pubDate>Sun, 19 Jan 2025 18:34:03 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-01-19-nvim-disable-pyright/</guid>
  <description><![CDATA[<p>While using <code>ruff-lsp</code> for Python diagnostics, I find it redundant to have <code>pyright</code> still active for all Python scripts. So I decide to <strong>disable</strong> it.</p>
<p>This is how I managed to solve it.</p>]]></description>
</item>
<item>
  <title>nvim treesitter 与 csv.nvim 冲突</title>
  <link>https://williamlfang.github.io/2025-01-17-nvim-treesitter-%E4%B8%8E-csv.nvim-%E5%86%B2%E7%AA%81/</link>
  <pubDate>Fri, 17 Jan 2025 22:23:35 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-01-17-nvim-treesitter-%E4%B8%8E-csv.nvim-%E5%86%B2%E7%AA%81/</guid>
  <description><![CDATA[<p>需要把 <code>nvim-treesitter</code> 的 <code>csv</code> 语法关闭</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="c1">-- List of parsers to ignore installing (or &#34;all&#34;)</span>
</span></span><span class="line"><span class="cl"><span class="n">ignore_install</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;javascript&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;markdown&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;org&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;csv&#34;</span><span class="p">,</span> <span class="c1">-- we do not use tree-sitter csv since csv.lua would be broken</span>
</span></span><span class="line"><span class="cl"><span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="n">highlight</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">enable</span> <span class="o">=</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- disable = {&#34;csv&#34;, &#34;markdown&#34;}</span>
</span></span><span class="line"><span class="cl">    <span class="n">disable</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&#34;csv&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">},</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>Airflow Plugins</title>
  <link>https://williamlfang.github.io/2025-01-14-airflow-plugins/</link>
  <pubDate>Tue, 14 Jan 2025 17:21:36 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-01-14-airflow-plugins/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/2025-01-14-airflow-plugins/mycron.png" alt="Airflow Plugins" title="Airflow Plugins" referrerpolicy="no-referrer"/></div><p><code>ariflow</code> 的 <code>schedule</code> 可以使用 <code>timetable</code> 或者 <code>cron expression</code> 配置任务调度的时间。对于使用 <code>cron expression</code>，如果我们需要更加细粒度的控制，则比较困难。比如我有一个任务设定在两个时间执行</p>
<ul>
<li><code>45 08 * * 1-5</code></li>
<li><code>01 09 * * 1-5</code></li>
</ul>
<p>这个在 <code>cron expression</code> 无法合并成同一个任务。</p>]]></description>
</item>
<item>
  <title>nvim tmux 颜色显示不对</title>
  <link>https://williamlfang.github.io/2025-01-13-nvim-tmux-%E9%A2%9C%E8%89%B2%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%AF%B9/</link>
  <pubDate>Mon, 13 Jan 2025 21:28:04 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-01-13-nvim-tmux-%E9%A2%9C%E8%89%B2%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%AF%B9/</guid>
  <description><![CDATA[<p>在 <code>~/.tmux.conf</code> 添加</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">set</span> -ga terminal-overrides <span class="s2">&#34;,xterm-256color:Tc&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">set</span> -g default-terminal <span class="s2">&#34;tmux-256color&#34;</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>avante.nvim</title>
  <link>https://williamlfang.github.io/2025-01-12-avante.nvim/</link>
  <pubDate>Sun, 12 Jan 2025 03:43:47 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-01-12-avante.nvim/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/2025-01-12-avante.nvim/nvim_deepseek.png" alt="avante.nvim" title="avante.nvim" referrerpolicy="no-referrer"/></div><p>前两天在 B 站看了一个视频， 介绍了目前国内 <code>AI</code> 领域做得非常不错的一家公司，也是量化界的领头羊-幻方。其中，谈到他们开发大模型 <code>deepseek</code> 已经拥有非常强劲的实力，能够满足大部分场景下的 <code>AGI</code> 使用，比如机器人、自动化代码生成器等。联想到之前我在网上看到 <code>avante.nvim</code> 这个插件可以为 <code>nvim</code> 带来 <code>AI</code> 辅助功能，当时由于国内还无法使用国外开发的大模型工具，所以就不了了之了。现在终于可以在国内合理合法的使用 <code>AI</code> 在 <code>nvim</code> 中辅助编程了。</p>]]></description>
</item>
<item>
  <title>ubuntu 安装 yarn</title>
  <link>https://williamlfang.github.io/2025-01-11-ubuntu-%E5%AE%89%E8%A3%85-yarn/</link>
  <pubDate>Sat, 11 Jan 2025 19:28:34 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-01-11-ubuntu-%E5%AE%89%E8%A3%85-yarn/</guid>
  <description><![CDATA[<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">## install nodejs</span>
</span></span><span class="line"><span class="cl">curl -fsSL https://deb.nodesource.com/setup_lts.x <span class="p">|</span> sudo -E bash -
</span></span><span class="line"><span class="cl">apt-get install nodejs -y
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## add repo for yarn</span>
</span></span><span class="line"><span class="cl">curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg <span class="p">|</span> sudo apt-key add -
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;deb https://dl.yarnpkg.com/debian/ stable main&#34;</span> <span class="p">|</span> sudo tee /etc/apt/sources.list.d/yarn.list
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## install yarn</span>
</span></span><span class="line"><span class="cl">apt-get update
</span></span><span class="line"><span class="cl">apt-get install yarn
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## now we have it</span>
</span></span><span class="line"><span class="cl">yarn --version</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>pyproject.toml 打包项目</title>
  <link>https://williamlfang.github.io/2025-01-10-pyproject.toml-%E6%89%93%E5%8C%85%E9%A1%B9%E7%9B%AE/</link>
  <pubDate>Fri, 10 Jan 2025 16:02:15 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-01-10-pyproject.toml-%E6%89%93%E5%8C%85%E9%A1%B9%E7%9B%AE/</guid>
  <description><![CDATA[<p><code>pyproject.toml</code> 是新一代的 <code>python</code> <strong>项目打包工具</strong>。相比于 <code>setup.py</code> 能够提供更多关于项目本身的信息。</p>]]></description>
</item>
</channel>
</rss>
