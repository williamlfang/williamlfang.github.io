<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Cmake - 标签 - William</title>
    <link>https://williamlfang.github.io/tags/cmake/</link>
    <description>Cmake - 标签 | William</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 25 Aug 2023 10:03:41 &#43;0000</lastBuildDate><atom:link href="https://williamlfang.github.io/tags/cmake/" rel="self" type="application/rss+xml" /><item>
  <title>vim coc 生成 compile_commands.json</title>
  <link>https://williamlfang.github.io/2023-08-25-vim-coc-%E7%94%9F%E6%88%90-compile_commands.json/</link>
  <pubDate>Fri, 25 Aug 2023 10:03:41 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2023-08-25-vim-coc-%E7%94%9F%E6%88%90-compile_commands.json/</guid>
  <description><![CDATA[<p><code>vim</code> 使用 <code>coc</code> 需要找到 <code>compile_commands.json</code>。</p>]]></description>
</item>
<item>
  <title>Ycm 与 cmake</title>
  <link>https://williamlfang.github.io/archives/2021-07-13-ycm-%E4%B8%8E-cmake/</link>
  <pubDate>Tue, 13 Jul 2021 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2021-07-13-ycm-%E4%B8%8E-cmake/</guid>
  <description><![CDATA[最近在配置 vim 的 ycm 插件，发现如果需要针对某个非系统的头文件路径，需要单独修改 third_party/ycmd/.ycm_extra_conf.]]></description>
</item>
<item>
  <title>Hippo: 编译项目</title>
  <link>https://williamlfang.github.io/archives/2020-07-22-hippo--%E7%BC%96%E8%AF%91%E9%A1%B9%E7%9B%AE/</link>
  <pubDate>Wed, 22 Jul 2020 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2020-07-22-hippo--%E7%BC%96%E8%AF%91%E9%A1%B9%E7%9B%AE/</guid>
  <description><![CDATA[<h1 id="安装-clang9" class="heading-element">
  <a href="#%e5%ae%89%e8%a3%85-clang9" class="heading-mark"></a>安装 clang9</h1><div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget https://releases.llvm.org/9.0.0/clang%2bllvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz
</span></span><span class="line"><span class="cl">tar -xvf clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04
</span></span><span class="line"><span class="cl">sudo mkdir /usr/lib/llvm-9
</span></span><span class="line"><span class="cl">sudo cp -r ./* /usr/lib/llvm-9</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>cmake 指定编译器路径</title>
  <link>https://williamlfang.github.io/archives/2020-04-08-cmake-%E6%8C%87%E5%AE%9A%E7%BC%96%E8%AF%91%E5%99%A8%E8%B7%AF%E5%BE%84/</link>
  <pubDate>Wed, 08 Apr 2020 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2020-04-08-cmake-%E6%8C%87%E5%AE%9A%E7%BC%96%E8%AF%91%E5%99%A8%E8%B7%AF%E5%BE%84/</guid>
  <description><![CDATA[原来是在 CMakeLists.txt 里设置编译器路径，但是发现这个没有生效： 1 set(CMAKE_CXX_COMPILER g++) 后面在 SO 上面找到答案：需要使用 export 指定路径。How to specify new GCC path for CMake 1 2 3 4 export CC=/usr/local/bin/gcc export CXX=/usr/local/bin/g++ cmake /path/to/your/project make]]></description>
</item>
<item>
  <title>cmake 要点总结</title>
  <link>https://williamlfang.github.io/archives/2019-12-17-cmake-%E8%A6%81%E7%82%B9%E6%80%BB%E7%BB%93/</link>
  <pubDate>Tue, 17 Dec 2019 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2019-12-17-cmake-%E8%A6%81%E7%82%B9%E6%80%BB%E7%BB%93/</guid>
  <description><![CDATA[调试通过 CMAKE_BUILD_TYPE 可以设置条件编译，执行生成可供调试的程序，这个相当于在命令行使用 1 cmake .. -DCMAKE_BUILD_TYPE=Debug 1 2 3 4 5 ## 调试状态 set(CMAKE_BUILD_TYPE Debug) ## 发布状态 set(CMAKE_BUILD_TYPE Release) 头文件包含 inclu]]></description>
</item>
</channel>
</rss>
