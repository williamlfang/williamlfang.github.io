<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Docker - 标签 - William</title>
    <link>https://williamlfang.github.io/tags/docker/</link>
    <description>Docker - 标签 | William</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 07 Mar 2024 15:57:59 &#43;0000</lastBuildDate><atom:link href="https://williamlfang.github.io/tags/docker/" rel="self" type="application/rss+xml" /><item>
  <title>docker 安装 gitbook</title>
  <link>https://williamlfang.github.io/2024-03-07-docker-%E5%AE%89%E8%A3%85-gitbook/</link>
  <pubDate>Thu, 07 Mar 2024 15:57:59 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2024-03-07-docker-%E5%AE%89%E8%A3%85-gitbook/</guid>
  <description><![CDATA[<h2 id="docker-compose" class="heading-element">
  <a href="#docker-compose" class="heading-mark"></a>docker-compose</h2><div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">version: &#34;3&#34;
</span></span><span class="line"><span class="cl">services:
</span></span><span class="line"><span class="cl">  gitbook:
</span></span><span class="line"><span class="cl">    hostname: gitbook
</span></span><span class="line"><span class="cl">    container_name: gitbook
</span></span><span class="line"><span class="cl">    image: fellah/gitbook
</span></span><span class="line"><span class="cl">    pull_policy: always
</span></span><span class="line"><span class="cl">    restart: always
</span></span><span class="line"><span class="cl">    privileged: true
</span></span><span class="line"><span class="cl">    tty: true
</span></span><span class="line"><span class="cl">    volumes:
</span></span><span class="line"><span class="cl">      - /data/gitbook:/srv/gitbook
</span></span><span class="line"><span class="cl">      - /etc/localtime:/etc/localtime
</span></span><span class="line"><span class="cl">    ports:
</span></span><span class="line"><span class="cl">      - 4000:4000
</span></span><span class="line"><span class="cl">    command:
</span></span><span class="line"><span class="cl">      - /bin/bash
</span></span><span class="line"><span class="cl">      - -c
</span></span><span class="line"><span class="cl">      - |
</span></span><span class="line"><span class="cl">        /bin/bash</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>docker buildx</title>
  <link>https://williamlfang.github.io/2023-06-29-docker-buildx/</link>
  <pubDate>Thu, 29 Jun 2023 20:04:08 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2023-06-29-docker-buildx/</guid>
  <description><![CDATA[<p><code>Docker</code> 提供了一些新功能，这些只有通过 <code>buildx</code> 插件才能完成。</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">  - <span class="o">[</span>X<span class="o">]</span> 处理Snail6Ops使用 Docker plugin 更新要求 buildx 插件升级的问题 <span class="o">(</span>2023-06-29 19:42:10<span class="o">)</span>
</span></span><span class="line"><span class="cl">    - <span class="o">[</span>X<span class="o">]</span> docker ERROR: BuildKit is enabled but the buildx component is missing or broken <span class="o">(</span>2023-06-29 19:42:56<span class="o">)</span>
</span></span><span class="line"><span class="cl">    - <span class="o">[</span>X<span class="o">]</span> <span class="nb">export</span> <span class="nv">DOCKER_BUILDKIT</span><span class="o">=</span><span class="m">1</span> <span class="o">(</span>2023-06-29 19:43:20<span class="o">)</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>docker in docker</title>
  <link>https://williamlfang.github.io/2023-05-17-docker-in-docker/</link>
  <pubDate>Wed, 17 May 2023 19:59:31 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2023-05-17-docker-in-docker/</guid>
  <description><![CDATA[airflow-in-docker 千万不能用 previlleged ，这个会导致无法 mount /var/run/docker.socket 1 2 3 4 5 6 7 8 9 ## root 执行 ## 不能用 previlleged，·普通用户也可以 docker run -dit \ -v /var/run/docker.sock:/var/run/docker.sock \ -v /usr/bin/docker:/bin/docker \ --name=airflow \ --pull=always \ -p 18080:8080]]></description>
</item>
<item>
  <title>R 安装 stringi 包</title>
  <link>https://williamlfang.github.io/2023-01-10-r-%E5%AE%89%E8%A3%85-stringi-%E5%8C%85/</link>
  <pubDate>Tue, 10 Jan 2023 23:04:33 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2023-01-10-r-%E5%AE%89%E8%A3%85-stringi-%E5%8C%85/</guid>
  <description><![CDATA[<p>命令行安装 R <code>stringi</code> 软件包</p>]]></description>
</item>
<item>
  <title>docker 安装 RabbitMQ</title>
  <link>https://williamlfang.github.io/2022-11-29-docker-%E5%AE%89%E8%A3%85-rabbitmq/</link>
  <pubDate>Tue, 29 Nov 2022 11:58:58 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2022-11-29-docker-%E5%AE%89%E8%A3%85-rabbitmq/</guid>
  <description><![CDATA[<p>在 <code>Docker</code> 环境安装 <code>RabbitMQ</code></p>]]></description>
</item>
<item>
  <title>docker 使用 sytemctl</title>
  <link>https://williamlfang.github.io/2022-11-25-docker-%E4%BD%BF%E7%94%A8-sytemctl/</link>
  <pubDate>Fri, 25 Nov 2022 10:43:35 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2022-11-25-docker-%E4%BD%BF%E7%94%A8-sytemctl/</guid>
  <description><![CDATA[<p>允许一个 <code>Docker container</code> 获取主机的 <code>systemctl</code> 权限。</p>]]></description>
</item>
<item>
  <title>docker compose command 保持容器处于活跃状态alive</title>
  <link>https://williamlfang.github.io/2022-11-24-docker-compose-command-%E4%BF%9D%E6%8C%81%E5%AE%B9%E5%99%A8%E5%A4%84%E4%BA%8E%E6%B4%BB%E8%B7%83%E7%8A%B6%E6%80%81alive/</link>
  <pubDate>Thu, 24 Nov 2022 22:12:24 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2022-11-24-docker-compose-command-%E4%BF%9D%E6%8C%81%E5%AE%B9%E5%99%A8%E5%A4%84%E4%BA%8E%E6%B4%BB%E8%B7%83%E7%8A%B6%E6%80%81alive/</guid>
  <description><![CDATA[<p>通过添加 <code>tail -f /dev/null</code> 保持刷新，使得容器始终处于活跃状态（alive），否则一旦命令执行完成，就会立即停止了。这样对于一些任务，我们往往想要其保持状态，方便进去容器内部进行调试。</p>]]></description>
</item>
<item>
  <title>docker compose 保持 git pull 最新代码</title>
  <link>https://williamlfang.github.io/2022-11-24-docker-compose-%E4%BF%9D%E6%8C%81-git-pull-%E6%9C%80%E6%96%B0%E4%BB%A3%E7%A0%81/</link>
  <pubDate>Thu, 24 Nov 2022 21:48:34 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2022-11-24-docker-compose-%E4%BF%9D%E6%8C%81-git-pull-%E6%9C%80%E6%96%B0%E4%BB%A3%E7%A0%81/</guid>
  <description><![CDATA[<p>由于 <code>Dockerfile</code> 使用了多层构建的方式，对于没有改动的命令行，就不会在执行重新构建了。如果我们需要在 <code>Dockerfile</code> 保持更新 <code>git pull</code>，可以有两种方式</p>
<ol>
<li><code>docker build</code> 的时候使用 <code>--no-cache</code> 选项，但是这个是全局范围的配置，一旦设置，需要全部重新构建，往往显得十分臃肿</li>
<li><code>docker-compose</code> 还支持提供 <code>--build-arg</code> 的选项，可以把一些参数传递到 <code>Dockerfile</code> 里面。</li>
</ol>]]></description>
</item>
<item>
  <title>Dockerfile 使用 ssh 下载私有 git 项目</title>
  <link>https://williamlfang.github.io/2022-11-24-dockerfile-%E4%BD%BF%E7%94%A8-ssh-%E4%B8%8B%E8%BD%BD%E7%A7%81%E6%9C%89-git-%E9%A1%B9%E7%9B%AE/</link>
  <pubDate>Thu, 24 Nov 2022 14:42:12 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2022-11-24-dockerfile-%E4%BD%BF%E7%94%A8-ssh-%E4%B8%8B%E8%BD%BD%E7%A7%81%E6%9C%89-git-%E9%A1%B9%E7%9B%AE/</guid>
  <description><![CDATA[<p>为了在 <code>Docker</code> 镜像里面下载私有 <code>git </code> 项目代码，我们需要告诉 <code>Dockerfile</code> 如何调用主机的 <code>ssh</code> 公钥。</p>]]></description>
</item>
<item>
  <title>Docker 使用 systemctl</title>
  <link>https://williamlfang.github.io/2022-11-23-docker-%E4%BD%BF%E7%94%A8-systemctl/</link>
  <pubDate>Wed, 23 Nov 2022 14:37:14 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2022-11-23-docker-%E4%BD%BF%E7%94%A8-systemctl/</guid>
  <description><![CDATA[<p>在一个 <code>Docker</code> 里面调用系统命令 <code>systemctl</code></p>]]></description>
</item>
</channel>
</rss>
