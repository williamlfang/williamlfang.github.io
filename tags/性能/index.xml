<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>性能 - 标签 - William</title>
    <link>https://williamlfang.github.io/tags/%E6%80%A7%E8%83%BD/</link>
    <description>性能 - 标签 | William</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 24 Feb 2023 16:06:09 &#43;0000</lastBuildDate><atom:link href="https://williamlfang.github.io/tags/%E6%80%A7%E8%83%BD/" rel="self" type="application/rss+xml" /><item>
  <title>证券行情调优攻略</title>
  <link>https://williamlfang.github.io/2023-02-24-%E8%AF%81%E5%88%B8%E8%A1%8C%E6%83%85%E8%B0%83%E4%BC%98%E6%94%BB%E7%95%A5/</link>
  <pubDate>Fri, 24 Feb 2023 16:06:09 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2023-02-24-%E8%AF%81%E5%88%B8%E8%A1%8C%E6%83%85%E8%B0%83%E4%BC%98%E6%94%BB%E7%95%A5/</guid>
  <description><![CDATA[<p>行情调优</p>]]></description>
</item>
<item>
  <title>Rcpp: 开发指南</title>
  <link>https://williamlfang.github.io/archives/2020-04-20-rcpp--%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/</link>
  <pubDate>Mon, 20 Apr 2020 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2020-04-20-rcpp--%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/</guid>
  <description><![CDATA[R 是一门统计编程语言，提供了丰富的统计分析方法，并允许用户安装第三方软件库，可以快速地构建从想法到实践的全过程。但是 R 毕竟是一门解释性语言，]]></description>
</item>
<item>
  <title>dd: 测试磁盘IO读写速度</title>
  <link>https://williamlfang.github.io/archives/2020-04-18-dd--%E6%B5%8B%E8%AF%95%E7%A3%81%E7%9B%98io%E8%AF%BB%E5%86%99%E9%80%9F%E5%BA%A6/</link>
  <pubDate>Sat, 18 Apr 2020 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2020-04-18-dd--%E6%B5%8B%E8%AF%95%E7%A3%81%E7%9B%98io%E8%AF%BB%E5%86%99%E9%80%9F%E5%BA%A6/</guid>
  <description><![CDATA[<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">## 测试写速度</span>
</span></span><span class="line"><span class="cl"><span class="nb">time</span> dd <span class="k">if</span><span class="o">=</span>/dev/zero <span class="nv">of</span><span class="o">=</span>/tmp/test <span class="nv">bs</span><span class="o">=</span>8k <span class="nv">count</span><span class="o">=</span><span class="m">1000000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 测试读速度</span>
</span></span><span class="line"><span class="cl"><span class="nb">time</span> dd <span class="k">if</span><span class="o">=</span>/tmp/test <span class="nv">of</span><span class="o">=</span>/dev/null <span class="nv">bs</span><span class="o">=</span>8k
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 测试读写速度</span>
</span></span><span class="line"><span class="cl"><span class="nb">time</span> dd <span class="k">if</span><span class="o">=</span>/tmp/test <span class="nv">of</span><span class="o">=</span>/var/test <span class="nv">bs</span><span class="o">=</span>64k</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>Linux 创建内存硬盘</title>
  <link>https://williamlfang.github.io/archives/2019-04-16-linux-%E5%88%9B%E5%BB%BA%E5%86%85%E5%AD%98%E7%A1%AC%E7%9B%98/</link>
  <pubDate>Tue, 16 Apr 2019 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2019-04-16-linux-%E5%88%9B%E5%BB%BA%E5%86%85%E5%AD%98%E7%A1%AC%E7%9B%98/</guid>
  <description><![CDATA[<p>我们知道，在操作系统层面，性能与存储空间（价格）之间存在着负相关性，即越靠近 <code>CPU</code> 的硬件具有更加快速的 <code>I/O</code> 性能，但相对空间较小，价格也比较贵；而那些远离 <code>CPU</code> 的设备则可以以相对低廉的价格获得足够大的存储空间，但是性能相对较弱。这就是著名的 <code>操作系统层次图</code>：</p>]]></description>
</item>
</channel>
</rss>
