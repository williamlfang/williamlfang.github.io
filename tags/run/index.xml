<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>RUN - 标签 - William</title>
    <link>https://williamlfang.github.io/tags/run/</link>
    <description>RUN - 标签 | William</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 24 Nov 2022 21:48:34 &#43;0000</lastBuildDate><atom:link href="https://williamlfang.github.io/tags/run/" rel="self" type="application/rss+xml" /><item>
  <title>docker compose 保持 git pull 最新代码</title>
  <link>https://williamlfang.github.io/2022-11-24-docker-compose-%E4%BF%9D%E6%8C%81-git-pull-%E6%9C%80%E6%96%B0%E4%BB%A3%E7%A0%81/</link>
  <pubDate>Thu, 24 Nov 2022 21:48:34 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2022-11-24-docker-compose-%E4%BF%9D%E6%8C%81-git-pull-%E6%9C%80%E6%96%B0%E4%BB%A3%E7%A0%81/</guid>
  <description><![CDATA[<p>由于 <code>Dockerfile</code> 使用了多层构建的方式，对于没有改动的命令行，就不会在执行重新构建了。如果我们需要在 <code>Dockerfile</code> 保持更新 <code>git pull</code>，可以有两种方式</p>
<ol>
<li><code>docker build</code> 的时候使用 <code>--no-cache</code> 选项，但是这个是全局范围的配置，一旦设置，需要全部重新构建，往往显得十分臃肿</li>
<li><code>docker-compose</code> 还支持提供 <code>--build-arg</code> 的选项，可以把一些参数传递到 <code>Dockerfile</code> 里面。</li>
</ol>]]></description>
</item>
</channel>
</rss>
