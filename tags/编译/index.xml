<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>编译 - 标签 - William</title>
    <link>https://williamlfang.github.io/tags/%E7%BC%96%E8%AF%91/</link>
    <description>编译 - 标签 | William</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 22 Nov 2022 12:06:55 &#43;0000</lastBuildDate><atom:link href="https://williamlfang.github.io/tags/%E7%BC%96%E8%AF%91/" rel="self" type="application/rss+xml" /><item>
  <title>Python3.11：源代码编译安装</title>
  <link>https://williamlfang.github.io/2022-11-22-python3.11-%E6%BA%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</link>
  <pubDate>Tue, 22 Nov 2022 12:06:55 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2022-11-22-python3.11-%E6%BA%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</guid>
  <description><![CDATA[<p>从源代码开始编译、安装 <code>Python3.11</code>，由于从这个版本之后，<code>Python</code> 采用了 <code>SSL</code> 的加密方式，需要依赖 <code>openssl-1.1.1</code>。同时，如果我们开启了 <code>--enable-optimization</code> 优化选项，还需要依赖 <code>gcc9</code> 以上版本才能支持，否则会一直出现报错。</p>]]></description>
</item>
<item>
  <title>OpenSSL 源代码编译安装</title>
  <link>https://williamlfang.github.io/archives/2020-10-14-openssl-%E6%BA%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</link>
  <pubDate>Wed, 14 Oct 2020 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2020-10-14-openssl-%E6%BA%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</guid>
  <description><![CDATA[下载到官网下载 1 wget https://www.openssl.org/source/old/1.1.1/openssl-1.1.1g.tar.gz 安装 1 2 3 4 5 6 tar -xvf openssl-1.1.1g.tar.gz cd openssl-1.1.1 ./config --prefix=/home/lfang/opt --libdir=lib no-shared zlib-dynamic make make install 设置 1 2 export LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64 echo &#34;export LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64&#34; &gt;&gt; ~/.bashrc 版本 1 openssl version -a]]></description>
</item>
<item>
  <title>Hippo: 编译项目</title>
  <link>https://williamlfang.github.io/archives/2020-07-22-hippo--%E7%BC%96%E8%AF%91%E9%A1%B9%E7%9B%AE/</link>
  <pubDate>Wed, 22 Jul 2020 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2020-07-22-hippo--%E7%BC%96%E8%AF%91%E9%A1%B9%E7%9B%AE/</guid>
  <description><![CDATA[<h1 id="安装-clang9" class="heading-element">
  <a href="#%e5%ae%89%e8%a3%85-clang9" class="heading-mark"></a>安装 clang9</h1><div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget https://releases.llvm.org/9.0.0/clang%2bllvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz
</span></span><span class="line"><span class="cl">tar -xvf clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04
</span></span><span class="line"><span class="cl">sudo mkdir /usr/lib/llvm-9
</span></span><span class="line"><span class="cl">sudo cp -r ./* /usr/lib/llvm-9</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>makefile 将所有目录中的源文件编译成独立程序</title>
  <link>https://williamlfang.github.io/archives/2019-03-24-makefile-%E5%B0%86%E6%89%80%E6%9C%89%E7%9B%AE%E5%BD%95%E4%B8%AD%E7%9A%84%E6%BA%90%E6%96%87%E4%BB%B6%E7%BC%96%E8%AF%91%E6%88%90%E7%8B%AC%E7%AB%8B%E7%A8%8B%E5%BA%8F/</link>
  <pubDate>Sun, 24 Mar 2019 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2019-03-24-makefile-%E5%B0%86%E6%89%80%E6%9C%89%E7%9B%AE%E5%BD%95%E4%B8%AD%E7%9A%84%E6%BA%90%E6%96%87%E4%BB%B6%E7%BC%96%E8%AF%91%E6%88%90%E7%8B%AC%E7%AB%8B%E7%A8%8B%E5%BA%8F/</guid>
  <description><![CDATA[<p><code>makefile</code> 是一款功能强大的<strong>工程项目管理套件</strong>，可以根据各个文件之间的依赖关系，自动生成事物处理的完整流程。我们现在有一个要求：使用 <code>make</code> 来一次性的把目录下的所有源文件编译成单独可运行的程序。</p>]]></description>
</item>
<item>
  <title>Sublime 编译 运行 c/c&#43;&#43; 文件</title>
  <link>https://williamlfang.github.io/archives/2019-01-05-sublime-%E7%BC%96%E8%AF%91-%E8%BF%90%E8%A1%8C-cpp/</link>
  <pubDate>Sat, 05 Jan 2019 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2019-01-05-sublime-%E7%BC%96%E8%AF%91-%E8%BF%90%E8%A1%8C-cpp/</guid>
  <description><![CDATA[<p>在 Sublime Text 3 编辑器里实现对 C/C++ 文件的编译与运行。</p>]]></description>
</item>
</channel>
</rss>
