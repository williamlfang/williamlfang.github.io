<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Gcc - 标签 - William</title>
    <link>https://williamlfang.github.io/tags/gcc/</link>
    <description>Gcc - 标签 | William</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 19 Mar 2024 18:30:35 &#43;0800</lastBuildDate><atom:link href="https://williamlfang.github.io/tags/gcc/" rel="self" type="application/rss+xml" /><item>
  <title>ATT 汇编语法</title>
  <link>https://williamlfang.github.io/2024-03-19-att-%E6%B1%87%E7%BC%96%E8%AF%AD%E6%B3%95/</link>
  <pubDate>Tue, 19 Mar 2024 18:30:35 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2024-03-19-att-%E6%B1%87%E7%BC%96%E8%AF%AD%E6%B3%95/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/2024-03-19-att-%E6%B1%87%E7%BC%96%E8%AF%AD%E6%B3%95/att.png" alt="ATT 汇编语法" title="ATT 汇编语法" referrerpolicy="no-referrer"/></div><p><code>AT&amp;T</code> 汇编是 <code>Linux</code> 操作系统默认的汇编语言。熟悉汇编语言能够增强我们对程序运行逻辑的认识，理解程序运行的性能瓶颈。</p>]]></description>
</item>
<item>
  <title>vim9 安装与配置coc.vim</title>
  <link>https://williamlfang.github.io/2023-05-26-vim9-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AEcoc.vim/</link>
  <pubDate>Fri, 26 May 2023 22:19:15 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2023-05-26-vim9-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AEcoc.vim/</guid>
  <description><![CDATA[<p>安装 <code>vim9</code>，并使用 <code>coc.vim</code> 实现代码补全。我把常用的一些插件也放在这里，方便大家参考。</p>]]></description>
</item>
<item>
  <title>制作一个基本Docker镜像</title>
  <link>https://williamlfang.github.io/2022-11-22-%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E5%9F%BA%E6%9C%ACdocker%E9%95%9C%E5%83%8F/</link>
  <pubDate>Tue, 22 Nov 2022 15:14:08 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2022-11-22-%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E5%9F%BA%E6%9C%ACdocker%E9%95%9C%E5%83%8F/</guid>
  <description><![CDATA[<p>使用 <code>Dockerfile</code>，从源代码开始搭建一个基本的 <code>Docker Image</code>，为其他应用提供基础服务。</p>]]></description>
</item>
<item>
  <title>Python3.11：源代码编译安装</title>
  <link>https://williamlfang.github.io/2022-11-22-python3.11-%E6%BA%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</link>
  <pubDate>Tue, 22 Nov 2022 12:06:55 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2022-11-22-python3.11-%E6%BA%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</guid>
  <description><![CDATA[<p>从源代码开始编译、安装 <code>Python3.11</code>，由于从这个版本之后，<code>Python</code> 采用了 <code>SSL</code> 的加密方式，需要依赖 <code>openssl-1.1.1</code>。同时，如果我们开启了 <code>--enable-optimization</code> 优化选项，还需要依赖 <code>gcc9</code> 以上版本才能支持，否则会一直出现报错。</p>]]></description>
</item>
<item>
  <title>gcc 找不到 libgomp.spec: No such file or directory</title>
  <link>https://williamlfang.github.io/archives/spec--no-such-file-or-directory/</link>
  <pubDate>Mon, 23 Mar 2020 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/spec--no-such-file-or-directory/</guid>
  <description><![CDATA[error: can&rsquo;t find libgomp.spec 在网上找了好久的解决方法，其实是因为最近安装了新版本的 gcc，无法与旧版本的动态库链接。这里需要拷贝一份到 LD_LIBRARY_PATH 所在的路径 1 2 sudo cp /home/william/Documents/Linux-Tools/gcc/gcc9/gcc-9.2.0/x86_64-pc-linux-gnu/libgomp/libgomp.spec /usr/lib sudo]]></description>
</item>
<item>
  <title>CentOS7:gcc7.3源代码编译升级</title>
  <link>https://williamlfang.github.io/archives/centos7gcc7.3%E6%BA%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91%E5%8D%87%E7%BA%A7/</link>
  <pubDate>Tue, 12 Nov 2019 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/centos7gcc7.3%E6%BA%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91%E5%8D%87%E7%BA%A7/</guid>
  <description><![CDATA[准备把需要下载和解压的文件都放在一个目录 1 2 3 4 5 6 7 8 9 10 mkdir -p ~/gcc7 cd gcc7 ## 下载 gcc7.3 wget https://mirrors.ustc.edu.cn/gnu/gcc/gcc-7.3.0/gcc-7.3.0.tar.gz ## 下载依赖包 wget ftp://gcc.gnu.org/pub/gcc/infrastructure/gmp-6.1.0.tar.bz2 wget https://ftp.gnu.org/gnu/mpc/mpc-1.0.3.tar.gz wget https://ftp.gnu.org/gnu/mpc/mpc-1.1.0.tar.gz 安装 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]]></description>
</item>
<item>
  <title>CentOS7 升级 gcc</title>
  <link>https://williamlfang.github.io/archives/2019-10-22-centos7-%E5%8D%87%E7%BA%A7-gcc/</link>
  <pubDate>Tue, 22 Oct 2019 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2019-10-22-centos7-%E5%8D%87%E7%BA%A7-gcc/</guid>
  <description><![CDATA[1 2 3 4 5 6 7 8 yum install centos-release-scl -y yum install devtoolset-7 -y scl enable devtoolset-7 bash gcc --version ## 注释： 在centos的devtoolset库中 最新的为 devtoolset-7，所以我们以后可]]></description>
</item>
<item>
  <title>makefile 将所有目录中的源文件编译成独立程序</title>
  <link>https://williamlfang.github.io/archives/2019-03-24-makefile-%E5%B0%86%E6%89%80%E6%9C%89%E7%9B%AE%E5%BD%95%E4%B8%AD%E7%9A%84%E6%BA%90%E6%96%87%E4%BB%B6%E7%BC%96%E8%AF%91%E6%88%90%E7%8B%AC%E7%AB%8B%E7%A8%8B%E5%BA%8F/</link>
  <pubDate>Sun, 24 Mar 2019 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2019-03-24-makefile-%E5%B0%86%E6%89%80%E6%9C%89%E7%9B%AE%E5%BD%95%E4%B8%AD%E7%9A%84%E6%BA%90%E6%96%87%E4%BB%B6%E7%BC%96%E8%AF%91%E6%88%90%E7%8B%AC%E7%AB%8B%E7%A8%8B%E5%BA%8F/</guid>
  <description><![CDATA[<p><code>makefile</code> 是一款功能强大的<strong>工程项目管理套件</strong>，可以根据各个文件之间的依赖关系，自动生成事物处理的完整流程。我们现在有一个要求：使用 <code>make</code> 来一次性的把目录下的所有源文件编译成单独可运行的程序。</p>]]></description>
</item>
<item>
  <title>SublimeGDB: 更好用的轻量级 Debugger</title>
  <link>https://williamlfang.github.io/archives/2019-02-20-sublimegdb--%E6%9B%B4%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BD%BB%E9%87%8F%E7%BA%A7-debugger/</link>
  <pubDate>Wed, 20 Feb 2019 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2019-02-20-sublimegdb--%E6%9B%B4%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BD%BB%E9%87%8F%E7%BA%A7-debugger/</guid>
  <description><![CDATA[<p><code>SublimeGDB</code> 是一款可以在 <code>Sublime</code> 编辑器内运行的代码调试器，即调用系统的 <code>GNU Debugger</code> 套件。通过一定的设置，我们便可以把 <code>Sublime</code> 改造成一款轻量级的 <code>IDE</code>，从而可以直接在编辑器对源文件^[source code]进行调试，并且提供了了多个代码调试状态，比直接在终端进行调试要强大的多，也十分方便。</p>]]></description>
</item>
</channel>
</rss>
