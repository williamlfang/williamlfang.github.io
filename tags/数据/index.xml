<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>数据 - 标签 - William</title>
    <link>https://williamlfang.github.io/tags/%E6%95%B0%E6%8D%AE/</link>
    <description>数据 - 标签 | William</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 22 Nov 2022 15:14:08 &#43;0000</lastBuildDate><atom:link href="https://williamlfang.github.io/tags/%E6%95%B0%E6%8D%AE/" rel="self" type="application/rss+xml" /><item>
  <title>制作一个基本Docker镜像</title>
  <link>https://williamlfang.github.io/2022-11-22-%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E5%9F%BA%E6%9C%ACdocker%E9%95%9C%E5%83%8F/</link>
  <pubDate>Tue, 22 Nov 2022 15:14:08 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2022-11-22-%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E5%9F%BA%E6%9C%ACdocker%E9%95%9C%E5%83%8F/</guid>
  <description><![CDATA[<p>使用 <code>Dockerfile</code>，从源代码开始搭建一个基本的 <code>Docker Image</code>，为其他应用提供基础服务。</p>]]></description>
</item>
<item>
  <title>Ubuntu 源代码安装 wireshark</title>
  <link>https://williamlfang.github.io/archives/2019-12-10-ubuntu-%E6%BA%90%E4%BB%A3%E7%A0%81%E5%AE%89%E8%A3%85-wireshark/</link>
  <pubDate>Tue, 10 Dec 2019 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2019-12-10-ubuntu-%E6%BA%90%E4%BB%A3%E7%A0%81%E5%AE%89%E8%A3%85-wireshark/</guid>
  <description><![CDATA[<p><code>wireshark</code> 与 <code>tcpdump</code> 是网络抓包的两大神器。其中，前者提供了更加便捷的界面操作，后者则比较适合在命令行进行操作。</p>]]></description>
</item>
<item>
  <title>交易所数据爬虫之上期所</title>
  <link>https://williamlfang.github.io/archives/2017-11-10-%E4%BA%A4%E6%98%93%E6%89%80%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E4%B9%8B%E4%B8%8A%E6%9C%9F%E6%89%80/</link>
  <pubDate>Fri, 10 Nov 2017 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2017-11-10-%E4%BA%A4%E6%98%93%E6%89%80%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E4%B9%8B%E4%B8%8A%E6%9C%9F%E6%89%80/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/archives/2017-11-10-%E4%BA%A4%E6%98%93%E6%89%80%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E4%B9%8B%E4%B8%8A%E6%9C%9F%E6%89%80/shfe01.png" alt="交易所数据爬虫之上期所" title="利用 `R` 与  `selenium` 对上期所网站进行数据爬虫，获取日行情数据、成交持仓排名、仓单日报等。" referrerpolicy="no-referrer"/></div><p>我们已经实现了对两个交易所的数据爬虫（<a href="">中金所</a>、<a href="">郑商所</a>）。在技术层面上，这两个交易所都采用了静态网页的格式来呈现交易数据，这种类型的数据爬虫相对比较容易，我们只需要找到对应的数据文件地址，然后利用历史的交易日期来生成所有交易日的数据链接，然后开通并行计算模式即可下载到所有的历史数据。但对于上期所和大商所，二者则使用了相对复杂一些的动态网页技术，使用 <code>AJAX</code> 动态加载来显示数据。对这类网站进行数据爬虫，我们需要使用更加高级的技术手段。</p>]]></description>
</item>
<item>
  <title>交易所数据爬虫之郑商所</title>
  <link>https://williamlfang.github.io/archives/2017-10-28-%E4%BA%A4%E6%98%93%E6%89%80%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E4%B9%8B%E9%83%91%E5%95%86%E6%89%80/</link>
  <pubDate>Sat, 28 Oct 2017 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2017-10-28-%E4%BA%A4%E6%98%93%E6%89%80%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E4%B9%8B%E9%83%91%E5%95%86%E6%89%80/</guid>
  <description><![CDATA[<p>上回我介绍了如何<a href="https://williamlfang.github.io/post/2017-10-23-%E4%BA%A4%E6%98%93%E6%89%80%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E4%B9%8B%E4%B8%AD%E9%87%91%E6%89%80/"target="_blank" rel="external nofollow noopener noreferrer">对中金所进行网络爬虫<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>，获得了股指期货相关的历史日行情数据和成交排名数据。同样的，我们也可以使用类似的爬虫技术，对郑商所进行网络爬虫。</p>]]></description>
</item>
<item>
  <title>交易所数据爬虫之中金所</title>
  <link>https://williamlfang.github.io/archives/2017-10-23-%E4%BA%A4%E6%98%93%E6%89%80%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E4%B9%8B%E4%B8%AD%E9%87%91%E6%89%80/</link>
  <pubDate>Mon, 23 Oct 2017 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2017-10-23-%E4%BA%A4%E6%98%93%E6%89%80%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E4%B9%8B%E4%B8%AD%E9%87%91%E6%89%80/</guid>
  <description><![CDATA[<p>针对中金所网站进行自动化网络爬虫，下载交易相关的数据，如日行情数据、期货公司持仓排名数据、仓单数据等。</p>
<p><figure><a class="lightgallery" href="./cffex01.png?size=large" data-thumbnail="./cffex01.png?size=small" data-sub-html="<h2>中金所网站提供股指期货相关的重要数据</h2><p>中金所网站提供股指期货相关的重要数据</p>"><img loading="lazy" src="./cffex01.png" alt="中金所网站提供股指期货相关的重要数据" srcset="./cffex01.png?size=small, ./cffex01.png?size=medium 1.5x, ./cffex01.png?size=large 2x" data-title="中金所网站提供股指期货相关的重要数据" style="background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/></a><figcaption class="image-caption">中金所网站提供股指期货相关的重要数据</figcaption>
  </figure></p>
<p>从<a href="http://www.cffex.com.cn/sj/hqsj/rtj/"target="_blank" rel="external nofollow noopener noreferrer">中金所网站<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>可以得到大量股指期货、国债以及国债期货相关的重要交易数据，如日行情数据、期货公司持仓排名数据、仓单数据等。 通过网络爬虫技术，我们可以下载得到历史的所有数据，为后期的量化建模与收益率回测提供数据支持。本篇文章讨论了</p>
<ul>
<li>如何识别中金所网址，找到对应的数据文件链接</li>
<li>使用并行计算模式下载所有的历史数据文件</li>
</ul>]]></description>
</item>
</channel>
</rss>
