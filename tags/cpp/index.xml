<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Cpp - 标签 - William</title>
    <link>https://williamlfang.github.io/tags/cpp/</link>
    <description>Cpp - 标签 | William</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 22 Feb 2025 20:39:59 &#43;0800</lastBuildDate><atom:link href="https://williamlfang.github.io/tags/cpp/" rel="self" type="application/rss+xml" /><item>
  <title>nvim dap 映射 r 快捷键</title>
  <link>https://williamlfang.github.io/2025-02-22-nvim-dap-%E6%98%A0%E5%B0%84-r-%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
  <pubDate>Sat, 22 Feb 2025 20:39:59 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-02-22-nvim-dap-%E6%98%A0%E5%B0%84-r-%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/2025-02-22-nvim-dap-%E6%98%A0%E5%B0%84-r-%E5%BF%AB%E6%8D%B7%E9%94%AE/nvim-dap-repl.png" alt="nvim dap 映射 r 快捷键" title="nvim dap 映射 r 快捷键" referrerpolicy="no-referrer"/></div><p>最近在研究如何使用 <code>nvim-dap</code> 进行 <code>debugging</code>。在 <code>gdb</code>，我们可以很方便的使用单个按键就可以触发一些行为，如</p>
<ul>
<li><i class="fa-regular fa-check-square fa-fw" aria-hidden="true"></i> <code>r</code>: <code>run</code></li>
<li><i class="fa-regular fa-check-square fa-fw" aria-hidden="true"></i> <code>c</code>: <code>continue</code></li>
<li><i class="fa-regular fa-check-square fa-fw" aria-hidden="true"></i> <code>s</code>: <code>step-in</code></li>
</ul>
<p>那么，我的想法也是在 <code>nvim-dap</code> 实现这样快捷键 <code>r</code> 来模拟 <code>run</code> 的行为。现在的问题是：由于在 <code>normal mode</code>，单个按键 <code>r</code> 代表 <code>replace one character</code>。</p>
<p>因此，我们需要在 <code>nvim</code> 的 <code>buffers</code> 去识别是否启动了 <code>nvim-dap</code></p>
<ul>
<li><i class="fa-regular fa-check-square fa-fw" aria-hidden="true"></i> 如果存在 <code>dap-repl</code>，则映射 <code>r</code>；</li>
<li><i class="fa-regular fa-check-square fa-fw" aria-hidden="true"></i> 如果找不到，则回退到 <code>replace</code> 的功能。</li>
</ul>]]></description>
</item>
<item>
  <title>c&#43;&#43; array of ZERO length</title>
  <link>https://williamlfang.github.io/2023-10-20-c-array-of-zero-length/</link>
  <pubDate>Fri, 20 Oct 2023 10:44:48 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2023-10-20-c-array-of-zero-length/</guid>
  <description><![CDATA[<h2 id="old-style0" class="heading-element">
  <a href="#old-style0" class="heading-mark"></a>old-style:[0]</h2><p>我在查看代码的时候，发现有一个 <code>struct</code> 有 <strong>长度为0</strong> 的数组。</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c++" data-lang="c++"><span class="line"><span class="cl"><span class="k">struct</span> <span class="nc">data_t</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">size_t</span> <span class="n">size</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>vim markdown 配置</title>
  <link>https://williamlfang.github.io/2023-05-28-vim-markdown-%E9%85%8D%E7%BD%AE/</link>
  <pubDate>Sun, 28 May 2023 00:52:23 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2023-05-28-vim-markdown-%E9%85%8D%E7%BD%AE/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/2023-05-28-vim-markdown-%E9%85%8D%E7%BD%AE/featured.png" alt="vim markdown 配置" title="vim markdown 配置" referrerpolicy="no-referrer"/></div><p>为了支持 <code>markdown</code> 的相关功能</p>
<ol>
<li>可以按照标题级别进行折叠</li>
<li>支持高亮代码块</li>
<li>文本自动补全功能</li>
<li>实时预览功能</li>
</ol>]]></description>
</item>
<item>
  <title>Vim 配置强大的C&#43;&#43;开发环境</title>
  <link>https://williamlfang.github.io/archives/2021-06-24-vim-%E9%85%8D%E7%BD%AE%E5%BC%BA%E5%A4%A7%E7%9A%84c&#43;&#43;%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
  <pubDate>Thu, 24 Jun 2021 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2021-06-24-vim-%E9%85%8D%E7%BD%AE%E5%BC%BA%E5%A4%A7%E7%9A%84c&#43;&#43;%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid>
  <description><![CDATA[安装 Vim8 使用 Anaconda-python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ## 不需要 lto export LDFLAGS=&#34;-fno-lto&#34; ## 有可能需要添加环境路径 ## 1. ldconfig -p |grep libSM ldconfig -p |grep libuuid ## 2. export]]></description>
</item>
<item>
  <title>Rcpp: 开发指南</title>
  <link>https://williamlfang.github.io/archives/2020-04-20-rcpp--%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/</link>
  <pubDate>Mon, 20 Apr 2020 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2020-04-20-rcpp--%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/</guid>
  <description><![CDATA[R 是一门统计编程语言，提供了丰富的统计分析方法，并允许用户安装第三方软件库，可以快速地构建从想法到实践的全过程。但是 R 毕竟是一门解释性语言，]]></description>
</item>
<item>
  <title>CLion：最好用的 C-C&#43;&#43; IDE</title>
  <link>https://williamlfang.github.io/archives/2017-12-10-clion-%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84-c-c&#43;&#43;-ide/</link>
  <pubDate>Sun, 10 Dec 2017 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2017-12-10-clion-%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84-c-c&#43;&#43;-ide/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/archives/2017-12-10-clion-%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84-c-c&#43;&#43;-ide/fig01.png" alt="CLion：最好用的 C-C&#43;&#43; IDE" title="CLion 是当前最好用的一款 c/cpp 的 IDE，真的没有之一。本文介绍如何安装并使用 CLion(2017.3)。" referrerpolicy="no-referrer"/></div><p><code>C/Cpp</code> 编程常常使程序员感到懊恼，一方面是编程语言本身的难度较高，另一方面，我认为也是因为没有比较好用的 <code>IDE</code>。不像 <code>R</code> 或者 <code>Python</code> 这些解释性编程语言，不需要经过编译即可运行 <code>REPL</code>(read-evaluate-print-loop)，提供实时互动的编程环境；<code>C/Cpp</code> 是一种静态的、需要经过编译的编程语言，这增加了我们查找代码错误的难度，也就是无法提供实时的纠错功能，而只能是在整个项目运行结束后才把相关的错误提示给到程序员。因此，对一款「好用IDE」的向往应该是一家有抱负的科技企业的奋斗动力。</p>
<p>神奇的 <code>JetBrain</code> 就是这么一家牛逼的公司，最早开发了 <code>CLion</code> 造福广大的 <code>C/Cpp</code> 程序员，后来又陆陆续续的开发了 <code>PyCharm</code> 等多款好用又好看的 <code>IDE</code>，可以说功德千秋、造福万代啊。今天我们来看看怎么在操作系统安装和使用这么好用的 <code>C/Cpp</code> IDE。</p>]]></description>
</item>
</channel>
</rss>
