<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Nvim - 标签 - William</title>
    <link>https://williamlfang.github.io/tags/nvim/</link>
    <description>Nvim - 标签 | William</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 22 Feb 2025 20:39:59 &#43;0800</lastBuildDate><atom:link href="https://williamlfang.github.io/tags/nvim/" rel="self" type="application/rss+xml" /><item>
  <title>nvim dap 映射 r 快捷键</title>
  <link>https://williamlfang.github.io/2025-02-22-nvim-dap-%E6%98%A0%E5%B0%84-r-%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
  <pubDate>Sat, 22 Feb 2025 20:39:59 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2025-02-22-nvim-dap-%E6%98%A0%E5%B0%84-r-%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/2025-02-22-nvim-dap-%E6%98%A0%E5%B0%84-r-%E5%BF%AB%E6%8D%B7%E9%94%AE/nvim-dap-repl.png" alt="nvim dap 映射 r 快捷键" title="nvim dap 映射 r 快捷键" referrerpolicy="no-referrer"/></div><p>最近在研究如何使用 <code>nvim-dap</code> 进行 <code>debugging</code>。在 <code>gdb</code>，我们可以很方便的使用单个按键就可以触发一些行为，如</p>
<ul>
<li><i class="fa-regular fa-check-square fa-fw" aria-hidden="true"></i> <code>r</code>: <code>run</code></li>
<li><i class="fa-regular fa-check-square fa-fw" aria-hidden="true"></i> <code>c</code>: <code>continue</code></li>
<li><i class="fa-regular fa-check-square fa-fw" aria-hidden="true"></i> <code>s</code>: <code>step-in</code></li>
</ul>
<p>那么，我的想法也是在 <code>nvim-dap</code> 实现这样快捷键 <code>r</code> 来模拟 <code>run</code> 的行为。现在的问题是：由于在 <code>normal mode</code>，单个按键 <code>r</code> 代表 <code>replace one character</code>。</p>
<p>因此，我们需要在 <code>nvim</code> 的 <code>buffers</code> 去识别是否启动了 <code>nvim-dap</code></p>
<ul>
<li><i class="fa-regular fa-check-square fa-fw" aria-hidden="true"></i> 如果存在 <code>dap-repl</code>，则映射 <code>r</code>；</li>
<li><i class="fa-regular fa-check-square fa-fw" aria-hidden="true"></i> 如果找不到，则回退到 <code>replace</code> 的功能。</li>
</ul>]]></description>
</item>
<item>
  <title>clangd 设置选项</title>
  <link>https://williamlfang.github.io/2024-10-27-clangd-%E8%AE%BE%E7%BD%AE%E9%80%89%E9%A1%B9/</link>
  <pubDate>Sun, 27 Oct 2024 13:49:15 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2024-10-27-clangd-%E8%AE%BE%E7%BD%AE%E9%80%89%E9%A1%B9/</guid>
  <description><![CDATA[<p>由于系统升级 <code>g++</code>， 导致 <code>nvim clangd</code> 补全有些问题，需要指定 <code>clangd</code> 的配置</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">mkdir ~/.config/clangd
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">vim ~/.config/clangd/config.yaml</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">CompileFlags</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Add</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="s2">&#34;-Wall&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="s2">&#34;-I/usr/include/c++/11&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="s2">&#34;-I/usr/include/x86_64-linux-gnu/c++/11&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">]</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>nvim 直接打开当前光标下的文件</title>
  <link>https://williamlfang.github.io/2024-03-18-nvim-%E7%9B%B4%E6%8E%A5%E6%89%93%E5%BC%80%E5%BD%93%E5%89%8D%E5%85%89%E6%A0%87%E4%B8%8B%E7%9A%84%E6%96%87%E4%BB%B6/</link>
  <pubDate>Mon, 18 Mar 2024 10:22:47 &#43;0800</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2024-03-18-nvim-%E7%9B%B4%E6%8E%A5%E6%89%93%E5%BC%80%E5%BD%93%E5%89%8D%E5%85%89%E6%A0%87%E4%B8%8B%E7%9A%84%E6%96%87%E4%BB%B6/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/2024-03-18-nvim-%E7%9B%B4%E6%8E%A5%E6%89%93%E5%BC%80%E5%BD%93%E5%89%8D%E5%85%89%E6%A0%87%E4%B8%8B%E7%9A%84%E6%96%87%E4%BB%B6/gf.gif" alt="nvim 直接打开当前光标下的文件" title="nvim 直接打开当前光标下的文件" referrerpolicy="no-referrer"/></div><p><code>nvim</code> 可以利用跳转功能，直接在当前光标下打开文件。如果该文件不存在，则新建一个。</p>
<p>我配置的快捷键是 <code>gf</code>(go file)。</p>]]></description>
</item>
<item>
  <title>nvim 配置 markdown 实时渲染</title>
  <link>https://williamlfang.github.io/2024-03-13-nvim-%E9%85%8D%E7%BD%AE-markdown-%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/</link>
  <pubDate>Wed, 13 Mar 2024 17:55:03 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2024-03-13-nvim-%E9%85%8D%E7%BD%AE-markdown-%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/2024-03-13-nvim-%E9%85%8D%E7%BD%AE-markdown-%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/nvim-markdown.png" alt="nvim 配置 markdown 实时渲染" title="nvim 配置 markdown 实时渲染" referrerpolicy="no-referrer"/></div><p>我现在基本上都是使用nvim做笔记，大部分的时间都是写 markdown 格式的文档。因此，需要一款能够在终端实时渲染的插件。</p>]]></description>
</item>
<item>
  <title>nvim 打开中文乱码</title>
  <link>https://williamlfang.github.io/2023-10-30-nvim-%E6%89%93%E5%BC%80%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</link>
  <pubDate>Mon, 30 Oct 2023 15:42:46 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2023-10-30-nvim-%E6%89%93%E5%BC%80%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</guid>
  <description><![CDATA[<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">set</span> <span class="nv">encoding</span><span class="o">=</span>utf-8
</span></span><span class="line"><span class="cl"><span class="nb">set</span> <span class="nv">termencoding</span><span class="o">=</span>utf-8
</span></span><span class="line"><span class="cl"><span class="nb">set</span> <span class="nv">fileencodings</span><span class="o">=</span>ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr
</span></span><span class="line"><span class="cl"><span class="nb">set</span> <span class="nv">fileencoding</span><span class="o">=</span>utf-8</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
</channel>
</rss>
