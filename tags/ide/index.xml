<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>IDE - 标签 - William</title>
    <link>https://williamlfang.github.io/tags/ide/</link>
    <description>IDE - 标签 | William</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 26 May 2023 22:19:15 &#43;0000</lastBuildDate><atom:link href="https://williamlfang.github.io/tags/ide/" rel="self" type="application/rss+xml" /><item>
  <title>vim9 安装与配置coc.vim</title>
  <link>https://williamlfang.github.io/2023-05-26-vim9-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AEcoc.vim/</link>
  <pubDate>Fri, 26 May 2023 22:19:15 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2023-05-26-vim9-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AEcoc.vim/</guid>
  <description><![CDATA[<p>安装 <code>vim9</code>，并使用 <code>coc.vim</code> 实现代码补全。我把常用的一些插件也放在这里，方便大家参考。</p>]]></description>
</item>
<item>
  <title>vim 打怪之旅</title>
  <link>https://williamlfang.github.io/2022-03-17-vim-%E6%89%93%E6%80%AA%E4%B9%8B%E6%97%85/</link>
  <pubDate>Thu, 17 Mar 2022 20:09:02 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/2022-03-17-vim-%E6%89%93%E6%80%AA%E4%B9%8B%E6%97%85/</guid>
  <description><![CDATA[<p><code>vim</code> 素有「编辑器之神」的称呼。对于 「Linux-er」，<code>vim</code> 是我们日常写代码的得力助手。</p>
<p>当然，这个「助手」并非那么「听话」，有时还很「高冷」。据说 SO 上面关于 Vim 问答最活跃的一个帖子，是如何退出。</p>
<p>我曾经也是一名小白。从一开始的「恐vim」心态，逐渐变成「爱不释手」，这过程中所经历的曲折不尽其数。为了让自己更加熟悉 Vim，也为了后来者有所参数，我决定以博客的形式，记录自己在使用 Vim 过程中所思所想、所感所悟，希望对自己有所总结，对他人有所启发。</p>
<p>文中主要以使用工具的实践为导向，介绍相关的插件与配置。</p>]]></description>
</item>
<item>
  <title>Emacs: 神的编辑器</title>
  <link>https://williamlfang.github.io/archives/2019-01-17-emacs--%E7%A5%9E%E7%9A%84%E7%BC%96%E8%BE%91%E5%99%A8/</link>
  <pubDate>Thu, 17 Jan 2019 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2019-01-17-emacs--%E7%A5%9E%E7%9A%84%E7%BC%96%E8%BE%91%E5%99%A8/</guid>
  <description><![CDATA[<p><code>Emacs</code> 速来有「神的编辑器」之美誉，同另一款「编辑器之神」<code>Vi/Vim</code>，都是程序员编辑源文件、编写文档的重要法宝。用一种在江湖上流传许久的说法，<code>Emacs</code>其实不是<strong>编辑器</strong>，而是披着编辑器外衣的<strong>操作系统</strong>，具有高强度的可拓展性，堪比一款操作系统般强大。</p>]]></description>
</item>
<item>
  <title>CLion：最好用的 C-C&#43;&#43; IDE</title>
  <link>https://williamlfang.github.io/archives/2017-12-10-clion-%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84-c-c&#43;&#43;-ide/</link>
  <pubDate>Sun, 10 Dec 2017 00:00:00 &#43;0000</pubDate>
  <author>william</author>
  <guid>https://williamlfang.github.io/archives/2017-12-10-clion-%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84-c-c&#43;&#43;-ide/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://williamlfang.github.io/archives/2017-12-10-clion-%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84-c-c&#43;&#43;-ide/fig01.png" alt="CLion：最好用的 C-C&#43;&#43; IDE" title="CLion 是当前最好用的一款 c/cpp 的 IDE，真的没有之一。本文介绍如何安装并使用 CLion(2017.3)。" referrerpolicy="no-referrer"/></div><p><code>C/Cpp</code> 编程常常使程序员感到懊恼，一方面是编程语言本身的难度较高，另一方面，我认为也是因为没有比较好用的 <code>IDE</code>。不像 <code>R</code> 或者 <code>Python</code> 这些解释性编程语言，不需要经过编译即可运行 <code>REPL</code>(read-evaluate-print-loop)，提供实时互动的编程环境；<code>C/Cpp</code> 是一种静态的、需要经过编译的编程语言，这增加了我们查找代码错误的难度，也就是无法提供实时的纠错功能，而只能是在整个项目运行结束后才把相关的错误提示给到程序员。因此，对一款「好用IDE」的向往应该是一家有抱负的科技企业的奋斗动力。</p>
<p>神奇的 <code>JetBrain</code> 就是这么一家牛逼的公司，最早开发了 <code>CLion</code> 造福广大的 <code>C/Cpp</code> 程序员，后来又陆陆续续的开发了 <code>PyCharm</code> 等多款好用又好看的 <code>IDE</code>，可以说功德千秋、造福万代啊。今天我们来看看怎么在操作系统安装和使用这么好用的 <code>C/Cpp</code> IDE。</p>]]></description>
</item>
</channel>
</rss>
